name: account-api

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: account-api-app
        restart: no
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./.docker/app/storage/logs:/var/www/storage/logs
        extra_hosts:
            - "host.docker.internal:172.21.0.1"
        depends_on:
            - mysql
        networks:
            - account-api

    nginx:
        image: nginx:alpine
        container_name: account-api-nginx
        restart: no
        ports:
            - "80:80"
        volumes:
            - .:/var/www
            - ./.docker/nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
            - ./.docker/nginx/logs:/var/log/nginx
        depends_on:
            - app
        networks:
            - account-api

    mysql:
        image: mysql:8.0
        container_name: account-api-mysql
        restart: no
        environment:
            MYSQL_DATABASE: account_api
            MYSQL_USER: dev
            MYSQL_PASSWORD: 1234
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "3306:3306"
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - account-api

    redis:
        image: redis:alpine
        container_name: account-api-redis
        restart: no
        ports:
            - "6379:6379"
        networks:
            - account-api

    queue_worker:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: account-api-queue-worker
        restart: no
        working_dir: /var/www
        user: "www-data"
        volumes:
            - .:/var/www
            - ./.docker/app/storage/logs:/var/www/storage/logs
        command: ["php", "artisan", "queue:work"]
        depends_on:
            - app
            - redis
        networks:
            - account-api

    audit_consumer:
        build:
            context: .
        container_name: account-api-audit-consumer
        command: php artisan kafka:consume-audit
        restart: no
        working_dir: /var/www
        user: "www-data"
        volumes:
            - .:/var/www
            - ./.docker/app/storage/logs:/var/www/storage/logs
        networks:
            - account-api

networks:
    account-api:
        driver: bridge
        name: account_api_network

volumes:
    mysql-data:
